FROM ubuntu:16.04

LABEL maintainer="leslie_yu@asus.com"

ARG DEBIAN_FRONTEND=noninteractive

RUN mkdir -p /home/builder
ENV HOME=/home/builder

#Install additional packages for Rockchip RK3399PRO Linux rootfs builds
RUN apt-get update && \
    apt-get install -y repo git-core gitk git-gui gcc-arm-linux-gnueabihf u-boot-tools device-tree-compiler \
    gcc-aarch64-linux-gnu mtools parted libudev-dev libusb-1.0-0-dev python-linaro-image-tools linaro-image-tools \
    autoconf autotools-dev libsigsegv2 m4 intltool libdrm-dev curl sed make binutils build-essential gcc g++ bash \
    patch gzip bzip2 perl tar cpio python unzip rsync file bc wget libncurses5 libqt4-dev libglib2.0-dev \
    libgtk2.0-dev libglade2-dev cvs git mercurial openssh-client subversion asciidoc w3m dblatex graphviz \
    python-matplotlib libssl-dev texinfo liblz4-tool genext2fs g+conf gcc-4.8-multilib-arm-linux-gnueabihf

#Install additional packages for Rockchip RK3399PRO Debian rootfs builds
RUN apt-get install -y gcc-4.8-multilib-arm-linux-gnueabihf gcc-arm-linux-gnueabihf g+conf

#Install additional packages for Building base debian system by ubuntu-build-service from linaro
RUN apt-get update && \
    apt-get install -f -y binfmt-support qemu-user-static live-build
COPY ubuntu-build-service /home/builder/ubuntu-build-service
RUN dpkg -i /home/builder/ubuntu-build-service/packages/* || apt-get install -f -y

#Install additional packages for building tool and script
RUN apt-get update && \
    apt-get install -y realpath time gcc-multilib

# Work in the source directory
WORKDIR /source

#Add sudo user builder non-interactively from command line
RUN echo "builder ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers

# Make /etc/passwd writeable for all since we need dynamically to add an entry for ssh
RUN chmod -R a+w $HOME /etc/passwd

COPY entrypoint.sh /entrypoint.sh
RUN chmod a+x /entrypoint.sh

ENTRYPOINT ["/entrypoint.sh"]
#CMD "/bin/bash"
